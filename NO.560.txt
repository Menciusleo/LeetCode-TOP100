Subarray Sum Equals K

难度：medium
题意：给一个数组和一个整数K，计算和为K的子数组的总个数.
解题思路：动态规划的思想，计算出前N项和并存入一个数组，进而可以计算出所有子数组的和。复杂度O(N2)。
还想了一种双指针的方法，但是只适用于非负数组。

code：
int subarraySum(vector<int>& nums, int k) {
        if(nums.empty())return 0;
        int res=0;
        vector<int> dp(nums.size()+1,0);
        dp[0]=0;
        
        for(int i=1;i<dp.size();i++)
        {
            dp[i]=dp[i-1]+nums[i-1];
        }
        for(int i=0;i<dp.size();i++)
        {
            for(int j=i+1;j<dp.size();j++)
            {
                if(dp[j]-dp[i]==k)res++;
            }
        }
        return res;
    }

结果：
Runtime: 680 ms, faster than 9.18% of C++ online submissions for Subarray Sum Equals K.
Memory Usage: 10.2 MB, less than 93.33% of C++ online submissions for Subarray Sum Equals K.